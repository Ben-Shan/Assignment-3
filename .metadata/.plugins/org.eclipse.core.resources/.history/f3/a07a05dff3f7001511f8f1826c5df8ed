package javaFXsound;

import java.io.File;


import javafx.application.Application;
import javafx.beans.value.ChangeListener;
import javafx.beans.value.ObservableValue;
import javafx.event.EventHandler;
import javafx.fxml.FXMLLoader;
import javafx.scene.Group;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Slider;
import javafx.scene.input.MouseEvent;
import javafx.scene.media.Media;
import javafx.scene.media.MediaPlayer;
import javafx.scene.media.MediaView;
import javafx.scene.paint.Color;
import javafx.stage.Stage;
import javafx.scene.media.AudioSpectrumListener;
import javafx.util.Duration;


public abstract class SoundPlayer extends Application {
	
	/*public File inputFile1;
	private Media media;
	public File file = new File("src\\audio\\1.mp3");
	
	public void setFile(File file){
		inputFile1 = file;
	}
	
	public File getFile(){
		return inputFile1;
	}
	
    */
	
	
	public static void main(String[] args){
		launch(args);
	}
	
	@Override
    public void start(Stage visStage) throws Exception{
				
		Parent visParent = FXMLLoader.load(getClass().getResource("Display.fxml"));
		Scene visScene = new Scene(visParent, 1000, 500, Color.rgb(255,0,0));	
		
		visStage.setTitle("Visualiser");
		visStage.setScene(visScene);
		visStage.show();
		
		
		
	/*	
		//call the method to set the new file
		setFile(file);
		//setting the file path
	    try{
	    	//set the inputFile1 equal to the new file
	        inputFile1 = getFile();
	        System.out.println("the file is : " + inputFile1);
			//converting the file path to a URI so media can read it
			String fileURI = inputFile1.toURI().toString();
			System.out.println("the URI is " + inputFile1);
	    	
			media = new Media(fileURI);
	    }catch (Exception e) {
            //e.printStackTrace();
	    	//if the file can't be found it will play an error sound.
            System.out.println("the file is not found");
            inputFile1 = new File("src\\audio\\Error.mp3");
            String fileURI = inputFile1.toURI().toString();
            media = new Media(fileURI);
            //System.exit(1);
        }
	    
	    
	    MediaPlayer player = new MediaPlayer(media);
	    MediaView view = new MediaView(player);
	    
	  
	 
	 	

	    

	    final Slider slider = new Slider();
	    
	

	    player.play();
	    
	    player.setOnReady(new Runnable(){
	    	@Override
	    	public void run(){
	
	    		
	    		slider.setMin(0.0);
	    		slider.setValue(0.0);
	    		slider.setMax(player.getTotalDuration().toSeconds());

	    	}
	    });
	    
	    player.currentTimeProperty().addListener(new ChangeListener<Duration>() {
            @Override
            public void changed(ObservableValue<? extends Duration> observableValue, Duration duration, Duration current) {
                slider.setValue(current.toSeconds());
            }
        });
	    
	    slider.setOnMouseClicked(new EventHandler<MouseEvent>(){
	    	@Override 
	    	public void handle(MouseEvent mouseEvent){
	    		player.seek(Duration.seconds(slider.getValue()));
	    	}
	    });
	    
	    player.setAudioSpectrumListener(new AudioSpectrumListener() {
            @Override
            public void spectrumDataUpdate(double v, double v1, float[] mags, float[] floats1) {
            	for( int i=0; i<128; i++){
            		double magnitude = mags[i]+60;
            	
            
            	}
            }            
	    });*/
	}
}

